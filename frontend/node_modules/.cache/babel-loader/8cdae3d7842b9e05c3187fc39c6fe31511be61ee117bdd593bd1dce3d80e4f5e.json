{"ast":null,"code":"var _jsxFileName = \"/home/kitanshi/ad-tracking-dashboard/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Registering Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [campaignData, setCampaignData] = useState([]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    // Fetch campaign data from the backend API\n    fetch('http://localhost:5000/api/metrics').then(response => response.json()).then(data => setCampaignData(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Handle filter change\n  const handleFilterChange = event => {\n    setFilter(event.target.value); // Update filter state\n  };\n\n  // Filtered data based on campaign name (case-insensitive)\n  const filteredData = campaignData.filter(campaign => campaign.campaign_name.toLowerCase().includes(filter.toLowerCase()));\n\n  // Chart Data\n  const chartData = {\n    labels: filteredData.map(campaign => campaign.campaign_name),\n    // X-axis: Campaign names\n    datasets: [{\n      label: 'Spend',\n      data: filteredData.map(campaign => campaign.spend),\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0, 0, 255, 0.2)',\n      fill: true\n    }, {\n      label: 'Conversions',\n      data: filteredData.map(campaign => campaign.conversions),\n      borderColor: 'green',\n      backgroundColor: 'rgba(0, 255, 0, 0.2)',\n      fill: true\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Campaign Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: filter,\n      onChange: handleFilterChange,\n      placeholder: \"Filter by campaign name\",\n      style: {\n        marginBottom: '20px',\n        padding: '8px',\n        fontSize: '14px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"u6HEfLBZFyZuh4UKv+SDHXrPJOM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","campaignData","setCampaignData","filter","setFilter","fetch","then","response","json","data","catch","error","console","handleFilterChange","event","target","value","filteredData","campaign","campaign_name","toLowerCase","includes","chartData","labels","map","datasets","label","spend","borderColor","backgroundColor","fill","conversions","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","marginBottom","padding","fontSize","options","responsive","_c","$RefreshReg$"],"sources":["/home/kitanshi/ad-tracking-dashboard/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Registering Chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst Dashboard = () => {\n  const [campaignData, setCampaignData] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    // Fetch campaign data from the backend API\n    fetch('http://localhost:5000/api/metrics')\n      .then(response => response.json())\n      .then(data => setCampaignData(data))\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Handle filter change\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value); // Update filter state\n  };\n\n  // Filtered data based on campaign name (case-insensitive)\n  const filteredData = campaignData.filter(campaign =>\n    campaign.campaign_name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  // Chart Data\n  const chartData = {\n    labels: filteredData.map(campaign => campaign.campaign_name), // X-axis: Campaign names\n    datasets: [\n      {\n        label: 'Spend',\n        data: filteredData.map(campaign => campaign.spend),\n        borderColor: 'blue',\n        backgroundColor: 'rgba(0, 0, 255, 0.2)',\n        fill: true,\n      },\n      {\n        label: 'Conversions',\n        data: filteredData.map(campaign => campaign.conversions),\n        borderColor: 'green',\n        backgroundColor: 'rgba(0, 255, 0, 0.2)',\n        fill: true,\n      }\n    ]\n  };\n\n  return (\n    <div>\n      <h2>Campaign Dashboard</h2>\n\n      {/* Filter Input */}\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n        placeholder=\"Filter by campaign name\"\n        style={{ marginBottom: '20px', padding: '8px', fontSize: '14px' }}\n      />\n\n      {/* Line Chart */}\n      <Line data={chartData} options={{ responsive: true }} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}