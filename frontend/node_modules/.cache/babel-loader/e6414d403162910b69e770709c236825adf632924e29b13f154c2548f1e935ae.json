{"ast":null,"code":"var _jsxFileName = \"/home/kitanshi/ad-tracking-dashboard/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Registering Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [campaignData, setCampaignData] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [isAscending, setIsAscending] = useState(true); // State to toggle sorting\n\n  useEffect(() => {\n    // Fetch campaign data from the backend API\n    fetch('http://localhost:5000/api/metrics').then(response => response.json()).then(data => setCampaignData(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Handle filter change\n  const handleFilterChange = event => {\n    setFilter(event.target.value); // Update filter state\n  };\n\n  // Sort campaigns by date\n  const handleSort = () => {\n    setIsAscending(!isAscending); // Toggle sort order\n  };\n\n  // Filtered data based on campaign name (case-insensitive)\n  const filteredData = campaignData.filter(campaign => campaign.campaign_name.toLowerCase().includes(filter.toLowerCase()));\n\n  // Sort the filtered data by date\n  const sortedData = filteredData.sort((a, b) => {\n    const dateA = new Date(a.date);\n    const dateB = new Date(b.date);\n    return isAscending ? dateA - dateB : dateB - dateA;\n  });\n\n  // Chart Data\n  const chartData = {\n    labels: sortedData.map(campaign => campaign.campaign_name),\n    // X-axis: Campaign names\n    datasets: [{\n      label: 'Spend',\n      data: sortedData.map(campaign => campaign.spend),\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0, 0, 255, 0.2)',\n      fill: true\n    }, {\n      label: 'Conversions',\n      data: sortedData.map(campaign => campaign.conversions),\n      borderColor: 'green',\n      backgroundColor: 'rgba(0, 255, 0, 0.2)',\n      fill: true\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Campaign Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: filter,\n      onChange: handleFilterChange,\n      placeholder: \"Filter by campaign name\",\n      style: {\n        marginBottom: '20px',\n        padding: '8px',\n        fontSize: '14px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSort,\n      style: {\n        padding: '10px',\n        marginBottom: '20px',\n        fontSize: '14px'\n      },\n      children: [\"Sort by Date: \", isAscending ? 'Ascending' : 'Descending']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Campaign Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Campaign ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Campaign Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Clicks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Impressions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Spend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Conversions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedData.map(campaign => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: campaign.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: campaign.campaign_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: campaign.campaign_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: campaign.clicks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: campaign.impressions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: campaign.spend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: campaign.conversions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, campaign.campaign_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Spend vs Conversions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"meFrbodAAM35Zx5LKd/7D3ZF3PA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","campaignData","setCampaignData","filter","setFilter","isAscending","setIsAscending","fetch","then","response","json","data","catch","error","console","handleFilterChange","event","target","value","handleSort","filteredData","campaign","campaign_name","toLowerCase","includes","sortedData","sort","a","b","dateA","Date","date","dateB","chartData","labels","map","datasets","label","spend","borderColor","backgroundColor","fill","conversions","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","marginBottom","padding","fontSize","onClick","campaign_id","clicks","impressions","options","responsive","_c","$RefreshReg$"],"sources":["/home/kitanshi/ad-tracking-dashboard/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Registering Chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst Dashboard = () => {\n  const [campaignData, setCampaignData] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [isAscending, setIsAscending] = useState(true); // State to toggle sorting\n\n  useEffect(() => {\n    // Fetch campaign data from the backend API\n    fetch('http://localhost:5000/api/metrics')\n      .then(response => response.json())\n      .then(data => setCampaignData(data))\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Handle filter change\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value); // Update filter state\n  };\n\n  // Sort campaigns by date\n  const handleSort = () => {\n    setIsAscending(!isAscending); // Toggle sort order\n  };\n\n  // Filtered data based on campaign name (case-insensitive)\n  const filteredData = campaignData.filter(campaign =>\n    campaign.campaign_name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  // Sort the filtered data by date\n  const sortedData = filteredData.sort((a, b) => {\n    const dateA = new Date(a.date);\n    const dateB = new Date(b.date);\n    return isAscending ? dateA - dateB : dateB - dateA;\n  });\n\n  // Chart Data\n  const chartData = {\n    labels: sortedData.map(campaign => campaign.campaign_name), // X-axis: Campaign names\n    datasets: [\n      {\n        label: 'Spend',\n        data: sortedData.map(campaign => campaign.spend),\n        borderColor: 'blue',\n        backgroundColor: 'rgba(0, 0, 255, 0.2)',\n        fill: true,\n      },\n      {\n        label: 'Conversions',\n        data: sortedData.map(campaign => campaign.conversions),\n        borderColor: 'green',\n        backgroundColor: 'rgba(0, 255, 0, 0.2)',\n        fill: true,\n      }\n    ]\n  };\n\n  return (\n    <div>\n      <h2>Campaign Dashboard</h2>\n\n      {/* Filter Input */}\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n        placeholder=\"Filter by campaign name\"\n        style={{ marginBottom: '20px', padding: '8px', fontSize: '14px' }}\n      />\n\n      {/* Sort Button */}\n      <button onClick={handleSort} style={{ padding: '10px', marginBottom: '20px', fontSize: '14px' }}>\n        Sort by Date: {isAscending ? 'Ascending' : 'Descending'}\n      </button>\n\n      {/* Data Table */}\n      <h3>Campaign Metrics</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Campaign ID</th>\n            <th>Campaign Name</th>\n            <th>Clicks</th>\n            <th>Impressions</th>\n            <th>Spend</th>\n            <th>Conversions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedData.map((campaign) => (\n            <tr key={campaign.campaign_id}>\n              <td>{campaign.date}</td>\n              <td>{campaign.campaign_id}</td>\n              <td>{campaign.campaign_name}</td>\n              <td>{campaign.clicks}</td>\n              <td>{campaign.impressions}</td>\n              <td>{campaign.spend}</td>\n              <td>{campaign.conversions}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Line Chart */}\n      <h3>Spend vs Conversions</h3>\n      <Line data={chartData} options={{ responsive: true }} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}